name: Deploy Guardian Core IaC

run-name: "Deploy Core IaC with config '${{ inputs.config }}' (${{ inputs.language }})"

on:
  workflow_dispatch:
    inputs:
      language:
        description: "IaC language"
        type: choice
        options:
        - bicep
        - terraform
        default: "bicep"
      config:
        required: true
        type: string
      build_only:
        required: true
        type: boolean
        default: false
  workflow_call:
    inputs:
      language:
        required: true
        type: string
      config:
        required: true
        type: string
      build_only:
        required: true
        type: boolean
        default: false
    outputs:
      apimGatewayUrl:
        value: ${{ jobs.deploy_iac.outputs.apimGatewayUrl }}
      containerAppSubnetId:
        value: ${{ jobs.deploy_iac.outputs.containerAppSubnetId }}
      workspaceApiSubscriptionKeySecretReference:
        value: ${{ jobs.deploy_iac.outputs.workspaceApiSubscriptionKeySecretReference }}
      workspaceApiSubscriptionKeySecretUrl:
        value: ${{ jobs.deploy_iac.outputs.workspaceApiSubscriptionKeySecretUrl }}
      appServicePlanSubnetId:
        value: ${{ jobs.deploy_iac.outputs.appServicePlanSubnetId }}

jobs:
  get_config:
    name: Load Guardian Core IaC configuration
    uses: ./.github/workflows/load-config.yml
    with:
      config: ${{ inputs.config }}

  build_iac:
    name: Build Guardian Core IaC
    concurrency:
      group: core-iac-${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: "Bicep: build guardian-core"
        shell: bash
        run: az bicep build --file "main.bicep"
        working-directory: iac/guardian-core/bicep

      - name: "Bicep: generate guardian-core parameters file"
        shell: pwsh
        run: |
          iac/helpers/scripts/ConvertTo-BicepParameters.ps1 -InputFilePath iac/guardian-core/variables/${{ inputs.config }}.parameters.json

      - name: "Terraform: guardian-core: checks"
        shell: bash
        run: |
          terraform init -backend=false
          terraform fmt -recursive -check
          terraform validate
        working-directory: iac/guardian-core/terraform

      - name: Publish Guardian.IaC Core artifacts
        uses: actions/upload-artifact@v4
        if: ${{ !fromJSON(inputs.build_only) }}
        with:
          name: guardian-iac-core
          overwrite: true
          path: |
            iac/guardian-core/bicep/main.json
            iac/guardian-core/variables/bicep-${{ inputs.config }}.parameters.json

  deploy_iac:
    if: ${{ !fromJSON(inputs.build_only) }}
    name: Deploy Guardian Core IaC
    concurrency:
      group: core-iac-${{ inputs.config }}
      cancel-in-progress: false
    outputs:
      apimGatewayUrl: ${{ steps.deploy.outputs.apiManagementGatewayUrl }}
      containerAppSubnetId: ${{ steps.deploy.outputs.containerAppSubnetId }}
      workspaceApiSubscriptionKeySecretReference: ${{ steps.deploy.outputs.workspaceApiSubscriptionKeySecretReference }}
      workspaceApiSubscriptionKeySecretUrl: ${{ steps.deploy.outputs.workspaceApiSubscriptionKeySecretUrl }}
      appServicePlanSubnetId: ${{ steps.deploy.outputs.appServicePlanSubnetId }}
    runs-on: ubuntu-latest
    needs:
    - build_iac
    - get_config
    steps:

    - name: Download Guardian.IaC artifacts from build job
      uses: actions/download-artifact@v4
      with:
        name: guardian-iac-core
        path: ./artifacts/iac

    - name: "Login via Azure CLI"
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        enable-AzPSSession: true

    # - name: Remove unknown role assignments
    #   uses: azure/powershell@v2
    #   with:
    #     inlineScript: |
    #       Get-AzRoleAssignment -ResourceGroupName "aoais-guardian-rg" | Where-Object { $_.ObjectType -eq "Unknown" } | Remove-AzRoleAssignment
    #     azPSVersion: "latest"

    - name: "Bicep: deploy guardian-core"
      id: deploy
      if: ${{ inputs.language == 'bicep' }}
      uses: azure/arm-deploy@v2
      with:
        deploymentName: guardian-core
        scope: resourcegroup
        subscriptionId: ${{ needs.get_config.outputs.subscription_id }}
        resourceGroupName: ${{ needs.get_config.outputs.resource_group_name }}
        template: "./artifacts/iac/bicep/main.json"
        parameters: ./artifacts/iac/variables/bicep-${{ inputs.config }}.parameters.json
        failOnStdErr: true
