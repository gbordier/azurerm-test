name: Load Configuration

on:
  
   workflow_dispatch:
      inputs:
        config:
          required: true
          type: string
   workflow_call:
    inputs:
      config:
        description: "Name of the configuration to use"
        required: true
        type: string
        default: "gbordier"
    outputs:
      subscription_id:
        description: "Core Subscription ID"
        value: ${{ jobs.get_config.outputs.subscription_id }}
      resource_group_name:
        description: "Core Resource Group Name"
        value: ${{ jobs.get_config.outputs.resource_group_name }}
      location:
        description: "Core Location"
        value: ${{ jobs.get_config.outputs.location }}
      is_private_deployment:
        description: "True if this is a private deployment, false otherwise"
        value: ${{ jobs.get_config.outputs.is_private_deployment }}
  

jobs:
  get_config:
    name: Get configuration
    runs-on: ubuntu-latest
    outputs:
      subscription_id: ${{ fromJson(env.PACKAGE_JSON).subscription_id }}
      resource_group_name: ${{ steps.coreVariables.outputs.resource_group_name }}
      location: ${{ steps.coreVariables.outputs.location }}
      is_private_deployment: ${{ steps.coreVariables.outputs.is_private_deployment }}
      
    steps:
    - uses: actions/checkout@v4

    - name: Get Core variables
      id: coreVariables
      shell: bash
      run: |
       echo 'PACKAGE_JSON<<EOF' >> $GITHUB_ENV
       cat ../variables/${{ input.config }}.json >> $GITHUB_ENV
       echo 'EOF' >> $GITHUB_ENV
    - name: define outputs
      id: define_outputs
      needs: coreVariables
      run: |
        echo "::set-output name=subscription_id::$(jq -r '.subscription_id' <<< $PACKAGE_JSON)"
        echo "::set-output name=resource_group_name::${{ fromJson(env.PACKAGE_JSON).resource_group_name }}"

